{
    "current_lesson": "rxjs-convert-rxjs-subjects-to-observables",
    "next_lesson": "rxjs-replace-observable-create-with-observable-creation-helpers",
    "next_lesson_http_url": "https://egghead.io/lessons/rxjs-replace-observable-create-with-observable-creation-helpers?series=save-time-avoiding-common-mistakes-using-rxjs",
    "list_type": "course",
    "list": {
        "id": 112,
        "slug": "save-time-avoiding-common-mistakes-using-rxjs",
        "title": "Save time avoiding common mistakes using RxJS",
        "description": "In this course we will learn to identify common mistakes with RxJS that usually make code harder to read and even introduce bugs. Most of these mistakes are related to Subject, subscribe, and subscriptions. We are going to see how to use only Observables and convenient operators made for solving those mistakes, such as fromEvent, takeUntil and switchMap. By the end of this course, you will have a more immediate intuition on what patterns are simple and safe in RxJS.",
        "updated_at": "2017-05-22T13:44:05.002-05:00",
        "http_url": "https://egghead.io/courses/save-time-avoiding-common-mistakes-using-rxjs",
        "lessons": [{
            "id": 1944,
            "creator_id": null,
            "slug": "rxjs-convert-rxjs-subjects-to-observables",
            "title": "Convert RxJS Subjects to Observables",
            "state": "published",
            "summary": "The use of RxJS Subjects is common, but not without problems. In this lesson we will see how they can be usually safely replaced with plain Observables.",
            "duration": 247,
            "old_technology": "RxJS",
            "plays_count": 0,
            "published_at": "2017-05-22T13:43:54.483-05:00",
            "is_pro_content": false,
            "difficulty_rating": 0,
            "tag_list": ["free", "rxjs"],
            "library_list": [],
            "language_list": [],
            "framework_list": [],
            "tool_list": [],
            "platform_list": [],
            "skillset_list": [],
            "skill_level_list": [],
            "lesson_url": "https://egghead.io/api/v1/lessons/rxjs-convert-rxjs-subjects-to-observables",
            "url": "https://egghead.io/api/v1/lessons/rxjs-convert-rxjs-subjects-to-observables",
            "lesson_http_url": "https://egghead.io/lessons/rxjs-convert-rxjs-subjects-to-observables",
            "icon_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg",
            "thumb_nail": "https://dcv19h61vib2d.cloudfront.net/thumbs/egghead-convert-rxjs-subjects-to-observables/egghead-convert-rxjs-subjects-to-observables.jpg",
            "related_url": "https://egghead.io/api/v1/lessons/1944/related",
            "is_pro": false,
            "technology": {
                "name": "rx",
                "label": "RxJS",
                "http_url": "https://egghead.io/technologies/rx",
                "logo_http_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg"
            },
            "instructor_url": "https://egghead.io/api/v1/instructors/andre-staltz",
            "instructor": {
                "id": 24,
                "slug": "andre-staltz",
                "full_name": "André Staltz",
                "first_name": "André",
                "last_name": "Staltz",
                "twitter": "andrestaltz",
                "website": "http://staltz.com",
                "bio": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "bio_short": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "google_plus": "",
                "http_url": "https://egghead.io/instructors/andre-staltz",
                "avatar_url": "https://d2eip9sf3oo6c2.cloudfront.net/instructors/avatars/000/000/024/original/andre_500.jpg?1435599944",
                "lessons_url": "https://egghead.io/api/v1/instructors/andre-staltz/lessons",
                "published_lessons": 107,
                "published_courses": 7
            },
            "series_row_order": -2621439,
            "completed": false,
            "favorited": false,
            "view": {},
            "new_view_url": "https://egghead.io/api/v1/lessons/rxjs-convert-rxjs-subjects-to-observables/views/new",
            "comments_url": "https://egghead.io/api/v1/lessons/rxjs-convert-rxjs-subjects-to-observables/comments",
            "parents": [],
            "children": []
        }, {
            "id": 1945,
            "creator_id": null,
            "slug": "rxjs-replace-observable-create-with-observable-creation-helpers",
            "title": "Replace Observable.create with Observable creation helpers",
            "state": "published",
            "summary": "In this lesson we will learn about potential problems that may arise when using Observable.create, a low-level function for creating Observables. In its place, we will use easier helper functions that create Observables in a safe manner.",
            "duration": 126,
            "old_technology": "RxJS",
            "plays_count": 0,
            "published_at": "2017-05-22T13:43:54.317-05:00",
            "is_pro_content": false,
            "difficulty_rating": 0,
            "tag_list": ["free", "rxjs"],
            "library_list": [],
            "language_list": [],
            "framework_list": [],
            "tool_list": [],
            "platform_list": [],
            "skillset_list": [],
            "skill_level_list": [],
            "lesson_url": "https://egghead.io/api/v1/lessons/rxjs-replace-observable-create-with-observable-creation-helpers",
            "url": "https://egghead.io/api/v1/lessons/rxjs-replace-observable-create-with-observable-creation-helpers",
            "lesson_http_url": "https://egghead.io/lessons/rxjs-replace-observable-create-with-observable-creation-helpers",
            "icon_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg",
            "thumb_nail": "https://dcv19h61vib2d.cloudfront.net/thumbs/egghead-replace-observablecreate-with-observable-creation-helpers/egghead-replace-observablecreate-with-observable-creation-helpers.jpg",
            "related_url": "https://egghead.io/api/v1/lessons/1945/related",
            "is_pro": false,
            "technology": {
                "name": "rx",
                "label": "RxJS",
                "http_url": "https://egghead.io/technologies/rx",
                "logo_http_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg"
            },
            "instructor_url": "https://egghead.io/api/v1/instructors/andre-staltz",
            "instructor": {
                "id": 24,
                "slug": "andre-staltz",
                "full_name": "André Staltz",
                "first_name": "André",
                "last_name": "Staltz",
                "twitter": "andrestaltz",
                "website": "http://staltz.com",
                "bio": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "bio_short": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "google_plus": "",
                "http_url": "https://egghead.io/instructors/andre-staltz",
                "avatar_url": "https://d2eip9sf3oo6c2.cloudfront.net/instructors/avatars/000/000/024/original/andre_500.jpg?1435599944",
                "lessons_url": "https://egghead.io/api/v1/instructors/andre-staltz/lessons",
                "published_lessons": 107,
                "published_courses": 7
            },
            "series_row_order": 1703937,
            "completed": false,
            "favorited": false,
            "view": {},
            "new_view_url": "https://egghead.io/api/v1/lessons/rxjs-replace-observable-create-with-observable-creation-helpers/views/new",
            "comments_url": "https://egghead.io/api/v1/lessons/rxjs-replace-observable-create-with-observable-creation-helpers/comments",
            "parents": [],
            "children": []
        }, {
            "id": 1946,
            "creator_id": null,
            "slug": "rxjs-use-takeuntil-instead-of-manually-unsubscribing-from-observables",
            "title": "Use takeUntil instead of manually unsubscribing from Observables",
            "state": "published",
            "summary": "Manually unsubscribing from subscriptions is safe, but tedious and error-prone. This lesson will teach us about the takeUntil operator and its utility to make unsubscribing automatic. ",
            "duration": 232,
            "old_technology": "RxJS",
            "plays_count": 0,
            "published_at": "2017-05-22T13:43:54.894-05:00",
            "is_pro_content": false,
            "difficulty_rating": 0,
            "tag_list": ["free", "rxjs"],
            "library_list": [],
            "language_list": [],
            "framework_list": [],
            "tool_list": [],
            "platform_list": [],
            "skillset_list": [],
            "skill_level_list": [],
            "lesson_url": "https://egghead.io/api/v1/lessons/rxjs-use-takeuntil-instead-of-manually-unsubscribing-from-observables",
            "url": "https://egghead.io/api/v1/lessons/rxjs-use-takeuntil-instead-of-manually-unsubscribing-from-observables",
            "lesson_http_url": "https://egghead.io/lessons/rxjs-use-takeuntil-instead-of-manually-unsubscribing-from-observables",
            "icon_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg",
            "thumb_nail": "https://dcv19h61vib2d.cloudfront.net/thumbs/egghead-use-takeuntil-instead-of-manually-unsubscribing-from-observables/egghead-use-takeuntil-instead-of-manually-unsubscribing-from-observables.jpg",
            "related_url": "https://egghead.io/api/v1/lessons/1946/related",
            "is_pro": false,
            "technology": {
                "name": "rx",
                "label": "RxJS",
                "http_url": "https://egghead.io/technologies/rx",
                "logo_http_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg"
            },
            "instructor_url": "https://egghead.io/api/v1/instructors/andre-staltz",
            "instructor": {
                "id": 24,
                "slug": "andre-staltz",
                "full_name": "André Staltz",
                "first_name": "André",
                "last_name": "Staltz",
                "twitter": "andrestaltz",
                "website": "http://staltz.com",
                "bio": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "bio_short": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "google_plus": "",
                "http_url": "https://egghead.io/instructors/andre-staltz",
                "avatar_url": "https://d2eip9sf3oo6c2.cloudfront.net/instructors/avatars/000/000/024/original/andre_500.jpg?1435599944",
                "lessons_url": "https://egghead.io/api/v1/instructors/andre-staltz/lessons",
                "published_lessons": 107,
                "published_courses": 7
            },
            "series_row_order": 4980736,
            "completed": false,
            "favorited": false,
            "view": {},
            "new_view_url": "https://egghead.io/api/v1/lessons/rxjs-use-takeuntil-instead-of-manually-unsubscribing-from-observables/views/new",
            "comments_url": "https://egghead.io/api/v1/lessons/rxjs-use-takeuntil-instead-of-manually-unsubscribing-from-observables/comments",
            "parents": [],
            "children": []
        }, {
            "id": 1948,
            "creator_id": null,
            "slug": "rxjs-convert-an-underlying-source-of-data-into-an-observable",
            "title": "Convert an underlying source of data into an Observable",
            "state": "published",
            "summary": "While there are many cases where we often believe that an RxJS Subject is necessary, there is a way of avoiding them. In this lesson we will see how to identify the underlying source of data and convert it into an Observable, essentially eliminating the use of an error-prone Subject. ",
            "duration": 234,
            "old_technology": "RxJS",
            "plays_count": 0,
            "published_at": "2017-05-22T13:43:55.453-05:00",
            "is_pro_content": false,
            "difficulty_rating": 0,
            "tag_list": ["free", "rxjs"],
            "library_list": [],
            "language_list": [],
            "framework_list": [],
            "tool_list": [],
            "platform_list": [],
            "skillset_list": [],
            "skill_level_list": [],
            "lesson_url": "https://egghead.io/api/v1/lessons/rxjs-convert-an-underlying-source-of-data-into-an-observable",
            "url": "https://egghead.io/api/v1/lessons/rxjs-convert-an-underlying-source-of-data-into-an-observable",
            "lesson_http_url": "https://egghead.io/lessons/rxjs-convert-an-underlying-source-of-data-into-an-observable",
            "icon_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg",
            "thumb_nail": "https://dcv19h61vib2d.cloudfront.net/thumbs/egghead-convert-an-underlying-source-of-data-into-an-observable/egghead-convert-an-underlying-source-of-data-into-an-observable.jpg",
            "related_url": "https://egghead.io/api/v1/lessons/1948/related",
            "is_pro": false,
            "technology": {
                "name": "rx",
                "label": "RxJS",
                "http_url": "https://egghead.io/technologies/rx",
                "logo_http_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg"
            },
            "instructor_url": "https://egghead.io/api/v1/instructors/andre-staltz",
            "instructor": {
                "id": 24,
                "slug": "andre-staltz",
                "full_name": "André Staltz",
                "first_name": "André",
                "last_name": "Staltz",
                "twitter": "andrestaltz",
                "website": "http://staltz.com",
                "bio": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "bio_short": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "google_plus": "",
                "http_url": "https://egghead.io/instructors/andre-staltz",
                "avatar_url": "https://d2eip9sf3oo6c2.cloudfront.net/instructors/avatars/000/000/024/original/andre_500.jpg?1435599944",
                "lessons_url": "https://egghead.io/api/v1/instructors/andre-staltz/lessons",
                "published_lessons": 107,
                "published_courses": 7
            },
            "series_row_order": 6750208,
            "completed": false,
            "favorited": false,
            "view": {},
            "new_view_url": "https://egghead.io/api/v1/lessons/rxjs-convert-an-underlying-source-of-data-into-an-observable/views/new",
            "comments_url": "https://egghead.io/api/v1/lessons/rxjs-convert-an-underlying-source-of-data-into-an-observable/comments",
            "parents": [],
            "children": []
        }, {
            "id": 1947,
            "creator_id": null,
            "slug": "rxjs-use-the-map-operator-instead-of-firing-events-on-a-subject",
            "title": "Use the map operator instead of firing events on a Subject",
            "state": "published",
            "summary": "In this lesson we will learn how to replace excessive subscribing and Subject emissions with simple uses of the map operator, simplifying our code and making it less bug-prone. ",
            "duration": 130,
            "old_technology": "RxJS",
            "plays_count": 0,
            "published_at": "2017-05-22T13:43:54.621-05:00",
            "is_pro_content": false,
            "difficulty_rating": 0,
            "tag_list": ["free", "rxjs"],
            "library_list": [],
            "language_list": [],
            "framework_list": [],
            "tool_list": [],
            "platform_list": [],
            "skillset_list": [],
            "skill_level_list": [],
            "lesson_url": "https://egghead.io/api/v1/lessons/rxjs-use-the-map-operator-instead-of-firing-events-on-a-subject",
            "url": "https://egghead.io/api/v1/lessons/rxjs-use-the-map-operator-instead-of-firing-events-on-a-subject",
            "lesson_http_url": "https://egghead.io/lessons/rxjs-use-the-map-operator-instead-of-firing-events-on-a-subject",
            "icon_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg",
            "thumb_nail": "https://dcv19h61vib2d.cloudfront.net/thumbs/egghead-use-the-map-operator-instead-of-firing-events-on-a-subject/egghead-use-the-map-operator-instead-of-firing-events-on-a-subject.jpg",
            "related_url": "https://egghead.io/api/v1/lessons/1947/related",
            "is_pro": false,
            "technology": {
                "name": "rx",
                "label": "RxJS",
                "http_url": "https://egghead.io/technologies/rx",
                "logo_http_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg"
            },
            "instructor_url": "https://egghead.io/api/v1/instructors/andre-staltz",
            "instructor": {
                "id": 24,
                "slug": "andre-staltz",
                "full_name": "André Staltz",
                "first_name": "André",
                "last_name": "Staltz",
                "twitter": "andrestaltz",
                "website": "http://staltz.com",
                "bio": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "bio_short": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "google_plus": "",
                "http_url": "https://egghead.io/instructors/andre-staltz",
                "avatar_url": "https://d2eip9sf3oo6c2.cloudfront.net/instructors/avatars/000/000/024/original/andre_500.jpg?1435599944",
                "lessons_url": "https://egghead.io/api/v1/instructors/andre-staltz/lessons",
                "published_lessons": 107,
                "published_courses": 7
            },
            "series_row_order": 7438336,
            "completed": false,
            "favorited": false,
            "view": {},
            "new_view_url": "https://egghead.io/api/v1/lessons/rxjs-use-the-map-operator-instead-of-firing-events-on-a-subject/views/new",
            "comments_url": "https://egghead.io/api/v1/lessons/rxjs-use-the-map-operator-instead-of-firing-events-on-a-subject/comments",
            "parents": [],
            "children": []
        }, {
            "id": 1949,
            "creator_id": null,
            "slug": "rxjs-use-flattening-operators-instead-of-nested-subscriptions",
            "title": "Use flattening operators instead of nested subscriptions",
            "state": "published",
            "summary": "We are going to see how to avoid virtually any case of a subscribe happening inside another subscribe by replacing it with a flattening operator such as flatMap or mergeAll.",
            "duration": 240,
            "old_technology": "RxJS",
            "plays_count": 0,
            "published_at": "2017-05-22T13:43:54.755-05:00",
            "is_pro_content": false,
            "difficulty_rating": 0,
            "tag_list": ["free", "rxjs"],
            "library_list": [],
            "language_list": [],
            "framework_list": [],
            "tool_list": [],
            "platform_list": [],
            "skillset_list": [],
            "skill_level_list": [],
            "lesson_url": "https://egghead.io/api/v1/lessons/rxjs-use-flattening-operators-instead-of-nested-subscriptions",
            "url": "https://egghead.io/api/v1/lessons/rxjs-use-flattening-operators-instead-of-nested-subscriptions",
            "lesson_http_url": "https://egghead.io/lessons/rxjs-use-flattening-operators-instead-of-nested-subscriptions",
            "icon_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg",
            "thumb_nail": "https://dcv19h61vib2d.cloudfront.net/thumbs/egghead-use-flattening-operators-instead-of-nested-subscriptions/egghead-use-flattening-operators-instead-of-nested-subscriptions.jpg",
            "related_url": "https://egghead.io/api/v1/lessons/1949/related",
            "is_pro": false,
            "technology": {
                "name": "rx",
                "label": "RxJS",
                "http_url": "https://egghead.io/technologies/rx",
                "logo_http_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg"
            },
            "instructor_url": "https://egghead.io/api/v1/instructors/andre-staltz",
            "instructor": {
                "id": 24,
                "slug": "andre-staltz",
                "full_name": "André Staltz",
                "first_name": "André",
                "last_name": "Staltz",
                "twitter": "andrestaltz",
                "website": "http://staltz.com",
                "bio": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "bio_short": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "google_plus": "",
                "http_url": "https://egghead.io/instructors/andre-staltz",
                "avatar_url": "https://d2eip9sf3oo6c2.cloudfront.net/instructors/avatars/000/000/024/original/andre_500.jpg?1435599944",
                "lessons_url": "https://egghead.io/api/v1/instructors/andre-staltz/lessons",
                "published_lessons": 107,
                "published_courses": 7
            },
            "series_row_order": 8110080,
            "completed": false,
            "favorited": false,
            "view": {},
            "new_view_url": "https://egghead.io/api/v1/lessons/rxjs-use-flattening-operators-instead-of-nested-subscriptions/views/new",
            "comments_url": "https://egghead.io/api/v1/lessons/rxjs-use-flattening-operators-instead-of-nested-subscriptions/comments",
            "parents": [],
            "children": []
        }, {
            "id": 1950,
            "creator_id": null,
            "slug": "rxjs-use-switchmap-to-avoid-leaks-when-flattening",
            "title": "Use switchMap to avoid leaks when flattening",
            "state": "published",
            "summary": "While flatMap is popular and convenient for flattening higher-order Observables, it can introduce new kinds of bugs related to subscriptions. In this lesson we will see how switchMap is a sensible default that avoids common bugs.",
            "duration": 184,
            "old_technology": "RxJS",
            "plays_count": 0,
            "published_at": "2017-05-22T13:43:55.034-05:00",
            "is_pro_content": false,
            "difficulty_rating": 0,
            "tag_list": ["free", "rxjs"],
            "library_list": [],
            "language_list": [],
            "framework_list": [],
            "tool_list": [],
            "platform_list": [],
            "skillset_list": [],
            "skill_level_list": [],
            "lesson_url": "https://egghead.io/api/v1/lessons/rxjs-use-switchmap-to-avoid-leaks-when-flattening",
            "url": "https://egghead.io/api/v1/lessons/rxjs-use-switchmap-to-avoid-leaks-when-flattening",
            "lesson_http_url": "https://egghead.io/lessons/rxjs-use-switchmap-to-avoid-leaks-when-flattening",
            "icon_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg",
            "thumb_nail": "https://dcv19h61vib2d.cloudfront.net/thumbs/egghead-use-switchmap-to-avoid-leaks-when-flattening/egghead-use-switchmap-to-avoid-leaks-when-flattening.jpg",
            "related_url": "https://egghead.io/api/v1/lessons/1950/related",
            "is_pro": false,
            "technology": {
                "name": "rx",
                "label": "RxJS",
                "http_url": "https://egghead.io/technologies/rx",
                "logo_http_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg"
            },
            "instructor_url": "https://egghead.io/api/v1/instructors/andre-staltz",
            "instructor": {
                "id": 24,
                "slug": "andre-staltz",
                "full_name": "André Staltz",
                "first_name": "André",
                "last_name": "Staltz",
                "twitter": "andrestaltz",
                "website": "http://staltz.com",
                "bio": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "bio_short": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "google_plus": "",
                "http_url": "https://egghead.io/instructors/andre-staltz",
                "avatar_url": "https://d2eip9sf3oo6c2.cloudfront.net/instructors/avatars/000/000/024/original/andre_500.jpg?1435599944",
                "lessons_url": "https://egghead.io/api/v1/instructors/andre-staltz/lessons",
                "published_lessons": 107,
                "published_courses": 7
            },
            "series_row_order": 8208384,
            "completed": false,
            "favorited": false,
            "view": {},
            "new_view_url": "https://egghead.io/api/v1/lessons/rxjs-use-switchmap-to-avoid-leaks-when-flattening/views/new",
            "comments_url": "https://egghead.io/api/v1/lessons/rxjs-use-switchmap-to-avoid-leaks-when-flattening/comments",
            "parents": [],
            "children": []
        }, {
            "id": 1953,
            "creator_id": null,
            "slug": "rxjs-replace-zip-with-combinelatest-when-combining-sources-of-data",
            "title": "Replace zip with combineLatest when combining sources of data",
            "state": "published",
            "summary": "This lesson will highlight the true purpose of the zip operator, and how uncommon its use cases are. In its place, we will learn how to use the combineLatest operator.",
            "duration": 181,
            "old_technology": "RxJS",
            "plays_count": 0,
            "published_at": "2017-05-22T13:43:55.166-05:00",
            "is_pro_content": false,
            "difficulty_rating": 0,
            "tag_list": ["free", "rxjs"],
            "library_list": [],
            "language_list": [],
            "framework_list": [],
            "tool_list": [],
            "platform_list": [],
            "skillset_list": [],
            "skill_level_list": [],
            "lesson_url": "https://egghead.io/api/v1/lessons/rxjs-replace-zip-with-combinelatest-when-combining-sources-of-data",
            "url": "https://egghead.io/api/v1/lessons/rxjs-replace-zip-with-combinelatest-when-combining-sources-of-data",
            "lesson_http_url": "https://egghead.io/lessons/rxjs-replace-zip-with-combinelatest-when-combining-sources-of-data",
            "icon_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg",
            "thumb_nail": "https://dcv19h61vib2d.cloudfront.net/thumbs/egghead-replace-zip-with-combinelatest-when-combining-sources-of-data/egghead-replace-zip-with-combinelatest-when-combining-sources-of-data.jpg",
            "related_url": "https://egghead.io/api/v1/lessons/1953/related",
            "is_pro": false,
            "technology": {
                "name": "rx",
                "label": "RxJS",
                "http_url": "https://egghead.io/technologies/rx",
                "logo_http_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg"
            },
            "instructor_url": "https://egghead.io/api/v1/instructors/andre-staltz",
            "instructor": {
                "id": 24,
                "slug": "andre-staltz",
                "full_name": "André Staltz",
                "first_name": "André",
                "last_name": "Staltz",
                "twitter": "andrestaltz",
                "website": "http://staltz.com",
                "bio": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "bio_short": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "google_plus": "",
                "http_url": "https://egghead.io/instructors/andre-staltz",
                "avatar_url": "https://d2eip9sf3oo6c2.cloudfront.net/instructors/avatars/000/000/024/original/andre_500.jpg?1435599944",
                "lessons_url": "https://egghead.io/api/v1/instructors/andre-staltz/lessons",
                "published_lessons": 107,
                "published_courses": 7
            },
            "series_row_order": 8265728,
            "completed": false,
            "favorited": false,
            "view": {},
            "new_view_url": "https://egghead.io/api/v1/lessons/rxjs-replace-zip-with-combinelatest-when-combining-sources-of-data/views/new",
            "comments_url": "https://egghead.io/api/v1/lessons/rxjs-replace-zip-with-combinelatest-when-combining-sources-of-data/comments",
            "parents": [],
            "children": []
        }, {
            "id": 1951,
            "creator_id": null,
            "slug": "rxjs-move-important-side-effects-from-do-to-subscribe",
            "title": "Move important side effects from do() to subscribe()",
            "state": "published",
            "summary": "The do() operator allows us to perform side effects in the chain of operators. However, there are limited use cases for do(). We will learn what those use cases are and how to use subscribe() most of the times.",
            "duration": 270,
            "old_technology": "RxJS",
            "plays_count": 0,
            "published_at": "2017-05-22T13:43:55.319-05:00",
            "is_pro_content": false,
            "difficulty_rating": 0,
            "tag_list": ["free", "rxjs"],
            "library_list": [],
            "language_list": [],
            "framework_list": [],
            "tool_list": [],
            "platform_list": [],
            "skillset_list": [],
            "skill_level_list": [],
            "lesson_url": "https://egghead.io/api/v1/lessons/rxjs-move-important-side-effects-from-do-to-subscribe",
            "url": "https://egghead.io/api/v1/lessons/rxjs-move-important-side-effects-from-do-to-subscribe",
            "lesson_http_url": "https://egghead.io/lessons/rxjs-move-important-side-effects-from-do-to-subscribe",
            "icon_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg",
            "thumb_nail": "https://dcv19h61vib2d.cloudfront.net/thumbs/egghead-move-important-side-effects-from-do-to-subscribe/egghead-move-important-side-effects-from-do-to-subscribe.jpg",
            "related_url": "https://egghead.io/api/v1/lessons/1951/related",
            "is_pro": false,
            "technology": {
                "name": "rx",
                "label": "RxJS",
                "http_url": "https://egghead.io/technologies/rx",
                "logo_http_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg"
            },
            "instructor_url": "https://egghead.io/api/v1/instructors/andre-staltz",
            "instructor": {
                "id": 24,
                "slug": "andre-staltz",
                "full_name": "André Staltz",
                "first_name": "André",
                "last_name": "Staltz",
                "twitter": "andrestaltz",
                "website": "http://staltz.com",
                "bio": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "bio_short": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "google_plus": "",
                "http_url": "https://egghead.io/instructors/andre-staltz",
                "avatar_url": "https://d2eip9sf3oo6c2.cloudfront.net/instructors/avatars/000/000/024/original/andre_500.jpg?1435599944",
                "lessons_url": "https://egghead.io/api/v1/instructors/andre-staltz/lessons",
                "published_lessons": 107,
                "published_courses": 7
            },
            "series_row_order": 8302592,
            "completed": false,
            "favorited": false,
            "view": {},
            "new_view_url": "https://egghead.io/api/v1/lessons/rxjs-move-important-side-effects-from-do-to-subscribe/views/new",
            "comments_url": "https://egghead.io/api/v1/lessons/rxjs-move-important-side-effects-from-do-to-subscribe/comments",
            "parents": [],
            "children": []
        }, {
            "id": 1952,
            "creator_id": null,
            "slug": "rxjs-implement-pause-and-resume-feature-correctly-through-rxjs",
            "title": "Implement pause and resume feature correctly through RxJS",
            "state": "published",
            "summary": "Eventually you will feel the need for pausing the observation of an Observable and resuming it later. In this lesson we will learn about use cases where pausing is possible, and what to do when pausing is impossible. ",
            "duration": 348,
            "old_technology": "RxJS",
            "plays_count": 0,
            "published_at": "2017-05-22T13:43:55.545-05:00",
            "is_pro_content": false,
            "difficulty_rating": 0,
            "tag_list": ["free", "rxjs"],
            "library_list": [],
            "language_list": [],
            "framework_list": [],
            "tool_list": [],
            "platform_list": [],
            "skillset_list": [],
            "skill_level_list": [],
            "lesson_url": "https://egghead.io/api/v1/lessons/rxjs-implement-pause-and-resume-feature-correctly-through-rxjs",
            "url": "https://egghead.io/api/v1/lessons/rxjs-implement-pause-and-resume-feature-correctly-through-rxjs",
            "lesson_http_url": "https://egghead.io/lessons/rxjs-implement-pause-and-resume-feature-correctly-through-rxjs",
            "icon_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg",
            "thumb_nail": "https://dcv19h61vib2d.cloudfront.net/thumbs/egghead-rx-implement-pause-and-resume-feature-correctly-through-rxjs/egghead-rx-implement-pause-and-resume-feature-correctly-through-rxjs.jpg",
            "related_url": "https://egghead.io/api/v1/lessons/1952/related",
            "is_pro": false,
            "technology": {
                "name": "rx",
                "label": "RxJS",
                "http_url": "https://egghead.io/technologies/rx",
                "logo_http_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg"
            },
            "instructor_url": "https://egghead.io/api/v1/instructors/andre-staltz",
            "instructor": {
                "id": 24,
                "slug": "andre-staltz",
                "full_name": "André Staltz",
                "first_name": "André",
                "last_name": "Staltz",
                "twitter": "andrestaltz",
                "website": "http://staltz.com",
                "bio": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "bio_short": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "google_plus": "",
                "http_url": "https://egghead.io/instructors/andre-staltz",
                "avatar_url": "https://d2eip9sf3oo6c2.cloudfront.net/instructors/avatars/000/000/024/original/andre_500.jpg?1435599944",
                "lessons_url": "https://egghead.io/api/v1/instructors/andre-staltz/lessons",
                "published_lessons": 107,
                "published_courses": 7
            },
            "series_row_order": 8341504,
            "completed": false,
            "favorited": false,
            "view": {},
            "new_view_url": "https://egghead.io/api/v1/lessons/rxjs-implement-pause-and-resume-feature-correctly-through-rxjs/views/new",
            "comments_url": "https://egghead.io/api/v1/lessons/rxjs-implement-pause-and-resume-feature-correctly-through-rxjs/comments",
            "parents": [],
            "children": []
        }, {
            "id": 2057,
            "creator_id": null,
            "slug": "rxjs-know-when-to-extend-the-observable-class",
            "title": "Know when to extend the Observable class",
            "state": "published",
            "summary": "The Observable in RxJS is a JavaScript class, and can be extended. In this lesson we will learn about those cases where extending the Observable class becomes a problem, and what cases where it makes sense to extend it.",
            "duration": 445,
            "old_technology": "RxJS",
            "plays_count": 0,
            "published_at": "2017-05-22T13:43:55.676-05:00",
            "is_pro_content": false,
            "difficulty_rating": 0,
            "tag_list": ["free", "rxjs"],
            "library_list": [],
            "language_list": [],
            "framework_list": [],
            "tool_list": [],
            "platform_list": [],
            "skillset_list": [],
            "skill_level_list": [],
            "lesson_url": "https://egghead.io/api/v1/lessons/rxjs-know-when-to-extend-the-observable-class",
            "url": "https://egghead.io/api/v1/lessons/rxjs-know-when-to-extend-the-observable-class",
            "lesson_http_url": "https://egghead.io/lessons/rxjs-know-when-to-extend-the-observable-class",
            "icon_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg",
            "thumb_nail": "https://dcv19h61vib2d.cloudfront.net/thumbs/egghead-know-when-to-extend-the-observable-class/egghead-know-when-to-extend-the-observable-class.jpg",
            "related_url": "https://egghead.io/api/v1/lessons/2057/related",
            "is_pro": false,
            "technology": {
                "name": "rx",
                "label": "RxJS",
                "http_url": "https://egghead.io/technologies/rx",
                "logo_http_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg"
            },
            "instructor_url": "https://egghead.io/api/v1/instructors/andre-staltz",
            "instructor": {
                "id": 24,
                "slug": "andre-staltz",
                "full_name": "André Staltz",
                "first_name": "André",
                "last_name": "Staltz",
                "twitter": "andrestaltz",
                "website": "http://staltz.com",
                "bio": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "bio_short": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "google_plus": "",
                "http_url": "https://egghead.io/instructors/andre-staltz",
                "avatar_url": "https://d2eip9sf3oo6c2.cloudfront.net/instructors/avatars/000/000/024/original/andre_500.jpg?1435599944",
                "lessons_url": "https://egghead.io/api/v1/instructors/andre-staltz/lessons",
                "published_lessons": 107,
                "published_courses": 7
            },
            "series_row_order": 8361984,
            "completed": false,
            "favorited": false,
            "view": {},
            "new_view_url": "https://egghead.io/api/v1/lessons/rxjs-know-when-to-extend-the-observable-class/views/new",
            "comments_url": "https://egghead.io/api/v1/lessons/rxjs-know-when-to-extend-the-observable-class/comments",
            "parents": [],
            "children": []
        }, {
            "id": 2058,
            "creator_id": null,
            "slug": "rxjs-make-observables-hot-only-where-necessary",
            "title": "Make Observables hot only where necessary",
            "state": "published",
            "summary": "Operators like publish(), refCount(), share() make it easy to convert a cold Observable to a hot one, and are often necessary to get some feature done. In this lesson we will learn when exactly do we need to convert to hot, and when can we leave the Observable cold.",
            "duration": 454,
            "old_technology": "RxJS",
            "plays_count": 0,
            "published_at": "2017-05-22T13:43:55.804-05:00",
            "is_pro_content": false,
            "difficulty_rating": 0,
            "tag_list": ["free", "rxjs"],
            "library_list": [],
            "language_list": [],
            "framework_list": [],
            "tool_list": [],
            "platform_list": [],
            "skillset_list": [],
            "skill_level_list": [],
            "lesson_url": "https://egghead.io/api/v1/lessons/rxjs-make-observables-hot-only-where-necessary",
            "url": "https://egghead.io/api/v1/lessons/rxjs-make-observables-hot-only-where-necessary",
            "lesson_http_url": "https://egghead.io/lessons/rxjs-make-observables-hot-only-where-necessary",
            "icon_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg",
            "thumb_nail": "https://dcv19h61vib2d.cloudfront.net/thumbs/egghead-make-observables-hot-only-where-necessary/egghead-make-observables-hot-only-where-necessary.jpg",
            "related_url": "https://egghead.io/api/v1/lessons/2058/related",
            "is_pro": false,
            "technology": {
                "name": "rx",
                "label": "RxJS",
                "http_url": "https://egghead.io/technologies/rx",
                "logo_http_url": "//d1xwtr0qwr70yv.cloudfront.net/assets/tech/rx-1fc88ef9d05f37e70e323050da3397f0.svg"
            },
            "instructor_url": "https://egghead.io/api/v1/instructors/andre-staltz",
            "instructor": {
                "id": 24,
                "slug": "andre-staltz",
                "full_name": "André Staltz",
                "first_name": "André",
                "last_name": "Staltz",
                "twitter": "andrestaltz",
                "website": "http://staltz.com",
                "bio": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "bio_short": "Andre is a user interface engineer at Futurice, with extensive knowledge\r\nin reactive programming. He is a contributor to RxJS, has built\r\nRxMarbles, written an introduction to reactive programming which went\r\nviral, and collaborated to design ReactiveX.io. His current mission is\r\nto redefine how we understand and structure user interfaces with the\r\nreactive web framework Cycle.js.",
                "google_plus": "",
                "http_url": "https://egghead.io/instructors/andre-staltz",
                "avatar_url": "https://d2eip9sf3oo6c2.cloudfront.net/instructors/avatars/000/000/024/original/andre_500.jpg?1435599944",
                "lessons_url": "https://egghead.io/api/v1/instructors/andre-staltz/lessons",
                "published_lessons": 107,
                "published_courses": 7
            },
            "series_row_order": 8375296,
            "completed": false,
            "favorited": false,
            "view": {},
            "new_view_url": "https://egghead.io/api/v1/lessons/rxjs-make-observables-hot-only-where-necessary/views/new",
            "comments_url": "https://egghead.io/api/v1/lessons/rxjs-make-observables-hot-only-where-necessary/comments",
            "parents": [],
            "children": []
        }]
    }
}
